// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapp_travel_agency.DataBase;

#nullable disable

namespace webapp_travel_agency.Migrations
{
    [DbContext(typeof(AgenziaContext))]
    [Migration("20220524153655_MessaggioCreate")]
    partial class MessaggioCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("webapp_travel_agency.Models.Messaggio", b =>
                {
                    b.Property<int>("MessaggioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessaggioId"), 1L, 1);

                    b.Property<int>("PacchettoViaggioId")
                        .HasColumnType("int");

                    b.Property<string>("cognome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("messaggio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MessaggioId");

                    b.HasIndex("PacchettoViaggioId");

                    b.ToTable("Messaggio");
                });

            modelBuilder.Entity("webapp_travel_agency.Models.PacchettoViaggio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("text");

                    b.Property<string>("Destinazioni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Giorni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prezzo")
                        .HasColumnType("float");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("PacchettoViaggio");
                });

            modelBuilder.Entity("webapp_travel_agency.Models.Messaggio", b =>
                {
                    b.HasOne("webapp_travel_agency.Models.PacchettoViaggio", "PacchettoViaggio")
                        .WithMany("Messaggio")
                        .HasForeignKey("PacchettoViaggioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PacchettoViaggio");
                });

            modelBuilder.Entity("webapp_travel_agency.Models.PacchettoViaggio", b =>
                {
                    b.Navigation("Messaggio");
                });
#pragma warning restore 612, 618
        }
    }
}
